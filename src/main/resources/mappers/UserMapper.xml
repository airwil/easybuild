<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easybuild.cores.dao.UserDao" >

  <resultMap id="BaseResultMap"  type="com.easybuild.cores.model.User">
     <id column="id" property="id"  jdbcType="INTEGER"/>
     <result column="username"  property="username"  jdbcType="VARCHAR"/>
     <result column="password"  property="password"  jdbcType="VARCHAR"/>
  </resultMap>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  
  <insert id="insert" parameterType="com.easybuild.cores.model.User" >
    insert into user(
    username,
    password
    )
    values (#{username,jdbcType=VARCHAR} 
    	    ,#{password,jdbcType=VARCHAR} 
    	    )
  </insert>
  
  
  <update id="updateByPrimaryKey" parameterType="com.easybuild.cores.model.User">
    update user
      <set>
        
        
        <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
        </if>
        
        
        <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
        </if>
        
      </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="select" parameterType="java.util.Map"  resultMap="BaseResultMap">
       select *from user  limit #{start},#{size}
  </select>
  
  <select id="count" parameterType="java.util.Map">
       select count(*) from user 
  </select>
</mapper>